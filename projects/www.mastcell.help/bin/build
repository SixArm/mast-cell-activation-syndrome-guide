#!/bin/sh
set -euf

git_top_dir=$(git rev-parse --show-toplevel)
project_dir="$git_top_dir/projects/www.mastcell.help"

topics_dir="$git_top_dir/topics"
static_dir="$project_dir/static"
routes_dir="$project_dir/src/routes"
template_file="$project_dir/bin/build-pandoc-template.svelte"
title_suffix=" | mastcell.help"

do_pandoc() {
    #echo "do_pandoc $*"
    template_file="$1"
    title="$2"
    input_file="$3"
    output_file="$4"
    [ -f "$output_file" ] && return
    pandoc \
    --standalone \
    --wrap=preserve \
    --from=markdown \
    --to=html \
    --template="$template_file" \
    --metadata title="$title" \
    --output="$output_file" \
    "$input_file"
}

do_slug() {
    #echo "do_slug $*"
    slug="$1"
    output_dir="$routes_dir/$slug"
    output_file="$output_dir/+page.svelte"
    [ -f "$output_file" ] && return
    mkdir -p "$output_dir"
    input_file="$topics_dir/$slug/index.md"
    title=$("$project_dir/bin/markdown-read-to-headline" "$input_file")"$title_suffix"
    do_pandoc "$template_file" "$title" "$input_file" "$output_file"
    #"$project_dir/bin/file-escape-html" "$output_file"
    return 0
}

build() {
    rsync -a "$git_top_dir/README.jpg" "$git_top_dir/mast-cell-help.epub" "$git_top_dir/mast-cell-help.pdf" "$static_dir/"
    rsync -a "$git_top_dir/assets/" "$static_dir/assets/"
    do_pandoc "$template_file" "Mast Cell Help" "$git_top_dir/README.md" "$routes_dir/+page.svelte" 
    sed -i.bak 's# href="topics/# href="/#' "$routes_dir/+page.svelte"
    sed -i.bak 's# src="assets/# src="/assets/#' "$routes_dir/+page.svelte"
    "$project_dir/bin/slugs" |
    while read -r slug; do
        do_slug "$slug"
    done
}

build
