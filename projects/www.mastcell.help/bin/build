#!/bin/sh
set -euf

GIT_TOP_DIR="$(git rev-parse --show-toplevel)"
PROGRAM_DIR=$(cd "$(dirname "${0}")" > /dev/null; pwd -L; cd - > /dev/null);

TOPICS="$GIT_TOP_DIR/topics"
STATIC="$PROGRAM_DIR/../static"
ROUTES="$PROGRAM_DIR/../src/routes"
TEMPLATE_FILE="$PROGRAM_DIR/build-pandoc-template.svelte"
TITLE_SUFFIX=" | My Example Site"

do_pandoc() {
    #echo "do_pandoc $*"
    template_file="$1"
    title="$2"
    input_file="$3"
    output_file="$4"
    [ -f "$output_file" ] && return
    pandoc \
    --standalone \
    --from=markdown \
    --to=html \
    --template="$template_file" \
    --metadata title="$title" \
    --output="$output_file" \
    "$input_file"
}

do_slug() {
    #echo "do_slug $*"
    slug="$1"
    output_dir="$ROUTES/$slug"
    output_file="$output_dir/+page.svelte"
    [ -f "$output_file" ] && return
    mkdir -p "$output_dir"
    input_file="$TOPICS/$slug/index.md"
    title=$("$PROGRAM_DIR/markdown-read-to-headline" "$input_file")"$TITLE_SUFFIX"
    do_pandoc "$TEMPLATE_FILE" "$title" "$input_file" "$output_file"
    #"$PROGRAM_DIR/bin/file-escape-html" "$output_file"
    return 0
}

build() {
    rsync -a "$GIT_TOP_DIR/README.jpg" "$GIT_TOP_DIR/mast-cell-help.epub" "$GIT_TOP_DIR/mast-cell-help.pdf" "$STATIC/"
    do_pandoc "$TEMPLATE_FILE" "Mast Cell Help" "$GIT_TOP_DIR/README.md" "$ROUTES/+page.svelte" 
    sed -i.bak 's#href="topics/#href="/#' "$ROUTES/+page.svelte"
    "$PROGRAM_DIR/slugs" |
    while read -r slug; do
        do_slug "$slug"
    done
}

build
